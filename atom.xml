<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>汤包桑的自留地</title>
  
  <subtitle>To live is to change the world.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://tangbaosang.github.io/"/>
  <updated>2019-04-03T15:16:54.422Z</updated>
  <id>http://tangbaosang.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Debian9下为普通用户添加root权限</title>
    <link href="http://tangbaosang.github.io/2019/04/03/Debian9%E4%B8%8B%E4%B8%BA%E6%99%AE%E9%80%9A%E7%94%A8%E6%88%B7%E6%B7%BB%E5%8A%A0root%E6%9D%83%E9%99%90/"/>
    <id>http://tangbaosang.github.io/2019/04/03/Debian9下为普通用户添加root权限/</id>
    <published>2019-04-03T15:02:25.000Z</published>
    <updated>2019-04-03T15:16:54.422Z</updated>
    
    <content type="html"><![CDATA[<p>服务器新装的系统，作为一个有着良好安全意识的运维人员，自然不能使用 <strong>root</strong> 用户裸奔。安装 <strong>sudo</strong> 工具包并为用户配置 <strong>root</strong> 权限是当务之急。</p><p>在非 <strong>Ubuntu Desktop</strong> 的绝大多数 Linux 环境下（包括 <strong>Ubuntu Server</strong>) ，即使安装了 <strong>sudo</strong> 包，但是新建的用户仍让无法使用 sudo 提权。</p><p>解决过无数次这样的问题了，决定还是在博客上记下来，一是方便日后查阅，二是方便在搜索引擎中曲折求索的新手用户。</p><p>首先，保证安装了 <strong>sudo</strong> 软件包，使用root用户执行如下命令:</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install sudo</span><br></pre></td></tr></table></figure><p>然后添加新的用户（已有用户的请绕过这一步）</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adduser tangbao</span><br><span class="line"><span class="comment"># tangbao是我的用户名，请换成你需要的名字。</span></span><br></pre></td></tr></table></figure><p>编辑文件 <strong>/etc/sudoers</strong> ,在其中找到 <strong>root ALL=(ALL:ALL) ALL</strong> 这一行，并在下面添加一行:</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tangbao ALL=(ALL:ALL) ALL</span><br><span class="line"><span class="comment"># 将这里的tangbao换成你的用户名</span></span><br></pre></td></tr></table></figure><p>保存 <strong>sudoers</strong> 文件的更改，注意，你的编辑器可能会收到警告，强制执行就行，如果你使用的是 <strong>vim</strong> 编辑器，执行命令，<strong>wq!</strong>。</p><p>接下来切换到你的新用户，尝试用 <strong>sudo</strong> 执行一些命令，看看是否能够正常运行。比如:</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cat /etc/hostname</span><br></pre></td></tr></table></figure><p>如果没有报错，顺利通过，那么恭喜你，你的用户已经可以提权至 <strong>root</strong> 权限！</p><p><strong>“With great power comes great responsibility.”</strong> 最后希望你能记住这句话。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;服务器新装的系统，作为一个有着良好安全意识的运维人员，自然不能使用 &lt;strong&gt;root&lt;/strong&gt; 用户裸奔。安装 &lt;strong&gt;sudo&lt;/strong&gt; 工具包并为用户配置 &lt;strong&gt;root&lt;/strong&gt; 权限是当务之急。&lt;/p&gt;
&lt;p&gt;在非 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Debian下安装Oh My Zsh</title>
    <link href="http://tangbaosang.github.io/2019/04/03/Debian%E4%B8%8B%E5%AE%89%E8%A3%85Oh%20My%20Zsh/"/>
    <id>http://tangbaosang.github.io/2019/04/03/Debian下安装Oh My Zsh/</id>
    <published>2019-04-03T14:49:19.000Z</published>
    <updated>2019-04-03T15:01:26.292Z</updated>
    
    <content type="html"><![CDATA[<p>晚上ISP的服务器重置功能终于修复了，给服务器重装了系统，自带的 Bash Shell 自然是不能满足功能和观感上的需求的，在我个人认为最好用的两个Shell <strong>zsh</strong> 和 <strong>fish</strong> 中最终还是选择了 <strong>zsh</strong> ，不为别的，仅仅是 <strong>zsh</strong> 对于bash的兼容性最好。</p><p>既然选择了 <strong>zsh</strong> 作为shell，那么自然要安装上目前最好用的 <strong>zsh</strong> 配置 <strong>Oh My Zsh</strong> 作为我们的配置文件。</p><p>首先，作为最基本的，安装 <strong>zsh</strong>:</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install zsh</span><br></pre></td></tr></table></figure><p>接下来安装 <strong>oh-my-zsh</strong> ， 注意下面这个官方在官网<a href="ohmyz.sh" title="ohmyzsh的官网链接">http://ohmyz.sh</a> 提供的安装脚本是无法使用的（至少我在macOS、Debian、和Ubuntu上都无法使用）</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sh -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 这个官网上的脚本无法使用</span></span><br></pre></td></tr></table></figure><p>我们移步至 <strong>Oh My Zsh</strong> 的 GitHub 页面，在 <strong>README.md</strong> 文件中找到以下脚本:</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sh -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果机器上没有 curl 和 git 需要先安装这两个包</span></span><br></pre></td></tr></table></figure><p>接下来就是一路下一步啦，终端会显示出炫酷的 Oh My Zsh 的 LOGO。此时，Oh My Zsh 部署成功。</p><p>Enjoy your feeling…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;晚上ISP的服务器重置功能终于修复了，给服务器重装了系统，自带的 Bash Shell 自然是不能满足功能和观感上的需求的，在我个人认为最好用的两个Shell &lt;strong&gt;zsh&lt;/strong&gt; 和 &lt;strong&gt;fish&lt;/strong&gt; 中最终还是选择了 &lt;st
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Mac下给ATOM配置Soskc代理</title>
    <link href="http://tangbaosang.github.io/2019/04/02/Mac%E4%B8%8B%E7%BB%99ATOM%E9%85%8D%E7%BD%AESoskc%E4%BB%A3%E7%90%86/"/>
    <id>http://tangbaosang.github.io/2019/04/02/Mac下给ATOM配置Soskc代理/</id>
    <published>2019-04-02T13:30:46.000Z</published>
    <updated>2019-04-02T13:31:11.764Z</updated>
    
    <content type="html"><![CDATA[<p>最近又重新拾起了 ATOM 编辑器，这个源于 GitHub 的所谓21世纪现代编辑器在设计方面真的是深得我心（除了运行缓慢的基于Web的框架），另一方面相对于大家一致好评的 VSCode 持否定态度，可能是我们这类一致受到反 Microsoft 教育的 Linux 传教士骨子与生俱来的吧。(尽管 VSCode 基于ATOM，而 GitHub 不久前也被 MS 收购了…)</p><p>因为大家都知道的原因，在我们热爱的祖国的网络环境下想访问一些技术资源十分的困难，这也直接影响了 ATOM 的 <strong>apm</strong> 包管理器。</p><p>在一个遍地插件化的时代，一个大量优秀插件的平台插件却无法安装实在是一件非常难受的事情，好在 <strong>apm</strong> 支持被代理，下面来介绍一下如何在macOS上设置 <strong>apm</strong> 的代理。</p><p>使用 <strong>atom</strong> 或其他编辑器，打开 <strong>home</strong> 目录下的 <strong>.apmrc</strong> 文件，这里我使用的是 <strong>vim</strong> 编辑器，对于不知道改如何定位文件的新手，可以使用下面这个绝大多数条件下都适用的命令来编辑 <strong>apm</strong> 的配置文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.atom/.apm/.apmrc</span><br><span class="line"><span class="comment"># 你可以使用任意编辑器替换掉这个命令中的vim，比如emacs、subl，或者atom。</span></span><br></pre></td></tr></table></figure><p>注意， <strong>~/.atom/</strong> 这个目录下也有一个 <strong>.apmrc</strong> 文件，这个文件被设计出来也不知道有何用途，但如果编辑错误会导致报错，大家要避免踩坑。</p><p>在我们找到的 <strong>.apmrc</strong> 中的文件末尾，添加如下两行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http-proxy=http://127.0.0.1:1087</span><br><span class="line">https-proxy=http://127.0.0.1:1087</span><br></pre></td></tr></table></figure><p>然后保存这个配置文件，并使用下面的命令检查 <strong>apm</strong> 目前的状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apm install --check</span><br></pre></td></tr></table></figure><p>如果能看到下面的输出，则表示代理配置成功了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Checking <span class="keyword">for</span> native build tools ✓</span><br></pre></td></tr></table></figure><p>注意，我使用的代理软件是 <strong>ShadowsocksX-NG</strong> ，不同的代理软件本地的http代理端口不同，你需要根据你的软件来修改配置中的http-proxy端口。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近又重新拾起了 ATOM 编辑器，这个源于 GitHub 的所谓21世纪现代编辑器在设计方面真的是深得我心（除了运行缓慢的基于Web的框架），另一方面相对于大家一致好评的 VSCode 持否定态度，可能是我们这类一致受到反 Microsoft 教育的 Linux 传教士骨
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>创站号</title>
    <link href="http://tangbaosang.github.io/2019/04/01/%E5%88%9B%E7%AB%99%E5%8F%B7/"/>
    <id>http://tangbaosang.github.io/2019/04/01/创站号/</id>
    <published>2019-04-01T14:15:25.000Z</published>
    <updated>2019-04-01T14:52:46.392Z</updated>
    
    <content type="html"><![CDATA[<p>又是一个个人网站。</p><p>过去的过去搭建了N个个人网站，每次搭建网站的时候满怀希望，打算在上面记录生活，积累知识，并待羽翼丰满切换成自己的后台程序。最终却更新不了几篇文章后闲置一段时间，直到服务器和域名过期也没能继续下去。</p><p>缺乏毅力，应当批评。</p><p>浪费了太多的时间、精力和金钱，也做了太多了无用功。</p><p>今天是2019年的4月1日。光阴似箭，没想到度过今年的前三个月的速度这么快。整体而言，今年还是朝着目标近了一步。过去的几个月里虽然花费在学习上的时间不多，但已经比去年累计起来还要多了。再加把劲，更充满斗志的冲下去，至少离自己做一个后端的目标不远了。</p><p>今年最大的收获是收获了彬彬，在今年的1月1日0点0分1秒，终于收获我爱。其中的幸福、喜悦和兴奋只有我自己知道。在拥有这么优秀的姑娘的同时也忽然感觉到了肩上扛下的责任，在那一霎那间仿佛拥有了整个世界。我得变得更强大才能守护好彬彬的美好。我与彬彬有个一年之约，就是一年后，我要变得足够强大，能毫不费力的完成现在的大部分计划，能有足够的财富娶她回家。</p><p>WordPress、Typecho、Hexo，网站搭了N个，类似慷慨激昂的创刊号也写了不少。但我相信这次不一样，定个小目标吧。5月1日前，每个月在这个网站更新5篇干货。记录并充实自己的技术。</p><p>一切都会更好的。毕竟，</p><p>心中有爱，脚下有风。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;又是一个个人网站。&lt;/p&gt;
&lt;p&gt;过去的过去搭建了N个个人网站，每次搭建网站的时候满怀希望，打算在上面记录生活，积累知识，并待羽翼丰满切换成自己的后台程序。最终却更新不了几篇文章后闲置一段时间，直到服务器和域名过期也没能继续下去。&lt;/p&gt;
&lt;p&gt;缺乏毅力，应当批评。&lt;/p&gt;
      
    
    </summary>
    
    
  </entry>
  
</feed>
